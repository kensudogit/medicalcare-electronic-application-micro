services:
  # Service Discovery
  service-discovery:
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - service-discovery
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - service-discovery
      - postgres-users
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-users:5432/medicalcare_users
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Application Service
  application-service:
    build:
      context: ./application-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - service-discovery
      - postgres-applications
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-applications:5432/medicalcare_applications
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Notification Service
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - service-discovery
      - postgres-notifications
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-notifications:5432/medicalcare_notifications
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # File Service
  file-service:
    build:
      context: ./file-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - service-discovery
      - postgres-files
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-files:5432/medicalcare_files
    volumes:
      - file_uploads:/app/uploads
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL for Users
  postgres-users:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: medicalcare_users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_users_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d medicalcare_users"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL for Applications
  postgres-applications:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: medicalcare_applications
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - postgres_applications_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d medicalcare_applications"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL for Notifications
  postgres-notifications:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: medicalcare_notifications
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    volumes:
      - postgres_notifications_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d medicalcare_notifications"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL for Files
  postgres-files:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: medicalcare_files
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5436:5432"
    volumes:
      - postgres_files_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d medicalcare_files"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Caching
  redis:
    image: redis:7-alpine
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx for Load Balancing
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - service-discovery
    networks:
      - medicalcare-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_users_data:
  postgres_applications_data:
  postgres_notifications_data:
  postgres_files_data:
  file_uploads:
  redis_data:

networks:
  medicalcare-network:
    driver: bridge 